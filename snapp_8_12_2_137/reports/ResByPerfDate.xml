<?xml version="1.0" encoding="UTF-8" standalone="no"?><DOEnt_DocTemplate><Header><EntityType>37</EntityType><EntityId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</EntityId><LastUpdate>2022-07-11T10:18:00.000+0200</LastUpdate></Header><DocTemplate><IconName>rpt-dataexport.png</IconName><EntityType>37</EntityType><DocTemplateId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</DocTemplateId><DocTemplateName>Orders by performance date</DocTemplateName><DocTemplateCode>DOC75</DocTemplateCode><CategoryId>56E73AC4-0538-494A-B661-345BBBDE739D</CategoryId><DocEnabled>true</DocEnabled><ExecRequireLogin>true</ExecRequireLogin><DocTemplateType>5</DocTemplateType><DocEditorType>6</DocEditorType><SystemCode>ResByPerfDate</SystemCode><DocContexts/><SaleForApproval>false</SaleForApproval><SaleOpen>false</SaleOpen><SalePaid>false</SalePaid><SaleCompleted>false</SaleCompleted><IndividualPAH>false</IndividualPAH><LogCount>4</LogCount><DataSourceSelection>false</DataSourceSelection><DataSourceId/><MaxDateRangeDays/><MediaEncoderPluginId/><ProductDocumentTagIDs/><MediaRfidOptionType/><ParamList><Param><DocParamId>AB3D23F8-6013-9B1F-006B-0180BD9034FC</DocParamId><DocTemplateId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</DocTemplateId><DocParamType>4</DocParamType><DocParamName>DateFrom</DocParamName><DocParamCaption>@Common.FromDate</DocParamCaption><DocParamDefault>[@CurrentDate]</DocParamDefault><Mandatory>true</Mandatory></Param><Param><DocParamId>7CFF4C68-DBD9-D2A4-006D-0180BD903500</DocParamId><DocTemplateId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</DocTemplateId><DocParamType>4</DocParamType><DocParamName>DateTo</DocParamName><DocParamCaption>@Common.ToDate</DocParamCaption><DocParamDefault>[@CurrentDate]</DocParamDefault><Mandatory>true</Mandatory></Param><Param><DocParamId>9D521D6F-9D7E-9266-006E-0180BD903501</DocParamId><DocTemplateId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</DocTemplateId><DocParamType>1008</DocParamType><DocParamName>EventId</DocParamName><DocParamCaption>@Event.Event</DocParamCaption><DocParamDefault/><Mandatory>false</Mandatory></Param><Param><DocParamId>8801B072-8916-DD75-0070-0180BD903502</DocParamId><DocTemplateId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</DocTemplateId><DocParamType>1001</DocParamType><DocParamName>LocationId</DocParamName><DocParamCaption>@Account.Location</DocParamCaption><DocParamDefault/><Mandatory>false</Mandatory></Param><Param><DocParamId>99B87AF7-F732-1AAB-0071-0180BD903503</DocParamId><DocTemplateId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</DocTemplateId><DocParamType>3</DocParamType><DocParamName>ResOnly</DocParamName><DocParamCaption>Reservation only</DocParamCaption><DocParamDefault>false</DocParamDefault><Mandatory>false</Mandatory></Param><Param><DocParamId>1DFE6B5D-DF76-2A79-0072-0180BD903503</DocParamId><DocTemplateId>FD993EC3-DEFF-90B1-0058-015B8108BB2F</DocTemplateId><DocParamType>1</DocParamType><DocParamName>Z_AttributeItemCode</DocParamName><DocParamCaption>@Product.Attribute</DocParamCaption><DocParamDefault/><Mandatory>false</Mandatory></Param></ParamList><DataSourceList><DataSource><Name>Default</Name><Code>PFQQAT65JE7UJDZ</Code><SQL unescaped="true"><![CDATA[declare @DateTimeFrom datetime = :@DateFrom;
declare @DateTimeTo datetime = DateAdd(second, -1, DateAdd(day, 1, :@DateTo));

declare @PerfTable TABLE (
  PerformanceId uniqueidentifier,
  PerformanceSetId uniqueidentifier
);

insert into @PerfTable (PerformanceId, PerformanceSetId)
select 
  PRF.PerformanceId,
  PSD.PerformanceSetId
from
  tbEvent EVT inner join
  tbPerformance PRF with(index(IX_Performance_EventId_DateTimeFrom)) on
      PRF.EventId=EVT.EventId and
      PRF.DateTimeFrom>=@DateTimeFrom and
      PRF.DateTimeTo<=@DateTimeTo and
      PRF.PerformanceStatus in (2/*onsale*/, 3/*suspended*/, 4/*completed*/) and
      (:@LocationId is null or PRF.LocationAccountId=:@LocationId) inner join
  tbPerformanceSetDetail PSD on 
      PSD.PerformanceId=PRF.PerformanceId
where
  (:@EventId is null) or (EVT.EventId=:@EventId)


select 
  Convert(varchar, SAL.SaleFiscalDate, 103) as [Booking Date],
  (
    select Convert(varchar, Min(T.TransactionDateTime), 103)
    from
      tbTransaction T inner join
      tbPayment P on P.TransactionId=T.TransactionId
    where
      T.SaleId=SAL.SaleId
  ) as [Payment Date],
  SAL.SaleCode as PNR,
  Cast(SAL.Approved as int) as [Approved],
  Cast(SAL.Paid as int) as [Paid],
  Cast(SAL.Encoded as int) as [Encoded],
  Cast(SAL.Printed as int) as [Printed],
  Cast(SAL.Validated as int) as [Validated],
  Cast(SAL.Completed as int) as [Completed],
  WKS.WorkstationName as [Workstation Name],
  (
    select top 1 Usr.DisplayName
    from
      tbTransaction Trn inner join
      tbAccount Usr on Usr.AccountId=Trn.UserAccountId
    where
      Trn.SaleId=SAL.SaleId
    order by
      Trn.TransactionDateTime desc
  ) as [User],
  Stuff((
    select ', ' + CAT.CategoryName
    from
      tbCategory2Entity C2E inner join
      tbCategory CAT on CAT.CategoryId=C2E.CategoryId
    where C2E.EntityId=ACC.AccountId
    order by CAT.CategoryName
    FOR XML PATH('')
  ), 1, 2, '') as [Account Category],
  ACC.DisplayName as [Account],
  AD.Address,
  AD.City,
  AD.Country,
  AD.BusinessPhone,
  AD.MobilePHone,
  Coalesce(AD.EmailAddress, (
    select LA.UserName
    from tbLoginAlias LA
    where
      LA.AccountId=AD.AccountId and
      LA.LoginAliasType=1
  )) as EmailAddress,
  LOC.DisplayName as [Location Name],
  EVT.EventName as [Event],
  PRD.ProductName as [Product],
  Stuff((
      select ', ' + AttributeItemName
      from
        tbSaleItem2AttributeItem SI2AI left outer join
        tbAttributeItem AI on AI.AttributeItemId=SI2AI.AttributeItemId left outer join
        tbAttribute A on A.AttributeId=AI.AttributeId
      where
        SI2AI.SaleItemId=SI.SaleItemId and
        SI2AI.Optional<>0
      order by
        A.AttributeWeight,
        AI.AttributeItemName
      FOR XML PATH('')
    ), 1, 1, '') as [Attributes],
  convert(varchar, PRF.DateTimeFrom, 103) as [Performance Date],
  SubString(convert(varchar, PRF.DateTimeFrom, 108), 1, 5) as [Performance Time],
  XX.Quantity as [Quantity],
  XX.UnitAmount as [Unit Amount],
  (XX.Quantity * XX.UnitAmount) as [Total Amount],
  Stuff((
      select distinct
      	'|' + SS.SaleCode
      from 
    	tbEntityLink EL left join
    	tbSale SS on SS.SaleId=EL.SrcEntityId
      where 
    	EL.DstEntityId=Sal.SaleId
      FOR XML PATH('')
    ), 1, 1, '') as [Source PNR],
  Stuff((
      select distinct
      	'|' + SS.SaleCode
      from 
    	tbEntityLink EL left join
    	tbSale SS on SS.SaleId=EL.DstEntityId
      where 
    	EL.SrcEntityId=Sal.SaleId and
        DstEntityType=21 --Sale
      FOR XML PATH('')
    ), 1, 1, '') as [Destination PNRs]
from
  (
    select
      X.SaleItemId,
      X.PerformanceId,
      X.UnitAmount,
      Sum(X.Quantity) as Quantity
    from
      (
        select
          SID.SaleItemId,
          PT.PerformanceId,
          TCK.UnitAmount,
          TCK.GroupQuantity as Quantity
        from
          @PerfTable PT inner join
          tbTicket TCK on
              TCK.PerformanceSetId=PT.PerformanceSetId and
              (TCK.TicketStatus<100 or TCK.TicketStatus=110/*cleared*/) inner join
          tbSaleItemDetail SID on
              SID.SaleItemDetailId=TCK.SaleItemDetailId

        union all

        select
          SI.SaleItemId,
          PT.PerformanceId,
          SI.UnitAmount,
          TI.Quantity
        from
          @PerfTable PT inner join
          tbSaleItem SI on 
              SI.PerformanceSetId=PT.PerformanceSetId inner join
          tbSale SAL on
              SAL.SaleId=SI.SaleId and
              SAL.SaleStatus=1 and
              SAL.Encoded=0 inner join
          tbTransactionItem TI on
              TI.SaleItemId=SI.SaleItemId
      ) X
    group by
      X.SaleItemId,
      X.PerformanceId,
      X.UnitAmount
  ) XX inner join
  tbSaleItem SI on SI.SaleItemId=XX.SaleItemId inner join
  tbSale SAL on SAL.SaleId=SI.SaleId left join
  tbSale2Account S2A on S2A.SaleId=Sal.SaleId and S2A.SaleAccountType=1 left  join
  tbWorkstation Wks on Wks.WorkstationId=Sal.WorkstationId left join
  tbAccount ACC on ACC.AccountId=S2A.AccountId left join
  tbAccountDetail AD on AD.AccountId=ACC.AccountId left join
  tbPerformance PRF on PRF.PerformanceId=XX.PerformanceId left join
  tbEvent EVT on EVT.EventId=PRF.EventId left join
  tbAccount LOC on LOC.AccountId=PRF.LocationAccountId left join
  tbProduct PRD on PRD.ProductId=SI.ProductId
where
  :@ResOnly=0 or
  S2A.AccountId is not null
]]></SQL></DataSource></DataSourceList><RightList><Right><IconName>station.png</IconName><UsrEntityType>3</UsrEntityType><UsrEntityId>20A03348-9A17-4EEF-A1EE-02E59B9E2911</UsrEntityId><UsrEntityCode>BKOFFICE</UsrEntityCode><UsrEntityName>Back Office</UsrEntityName><RightLevel>5</RightLevel></Right><Right><IconName>account_prs.png</IconName><UsrEntityType>15</UsrEntityType><UsrEntityId>A0000131-0000-0000-0000-000000000015</UsrEntityId><UsrEntityCode/><UsrEntityName>Every user</UsrEntityName><RightLevel>5</RightLevel></Right></RightList></DocTemplate></DOEnt_DocTemplate>